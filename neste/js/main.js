'use strict';

/* datepicker */
(function () {
    $('.jsDatePicker').datepicker();
})();
/* drop down menu */
(function () {
    var $header = $('.header');
    $('.header__burger').on('click', function (e) {
        e.preventDefault();
        $header.toggleClass('dropOpened');
    });
    $('.header__drop__item').on('click', function () {
        $header.removeClass('dropOpened');
    });
})();

/* faq answer */
(function () {
    $('.cabinet__faq__text').on('click', function () {
        $(this).closest('.cabinet__faq__item').toggleClass('active');
    });
})();
/* form */
(function () {
    function initForm() {
        var $form = $(this);
        $form.on('submit', function (e) {
            e.preventDefault();
            $.ajax({
                url: $form.attr('action'),
                data: $form.serialize(),
                dataType: 'json',
                error: function error(err) {
                    console.log(err);
                },
                success: function success(response) {
                    if (!!response.success) {
                        //чистим форму, если всё ок
                        $form.find('[type="text"],[type="number"],textarea').val('');
                        $form.find('select').val('default');
                    }
                    popupApp.alert(response);
                }
            });
        });
    }
    function validateBeforeSend() {
        var $form = $(this);
        var $submit = $form.find('[type="submit"]');
        var $required = $form.find('[required]');
        $submit.on('click', function (e) {
            $required.each(function () {
                var $this = $(this);
                var value = $this.val().replace(" ", "");
                if (!value.length || value == 'default') {
                    $this.addClass('error');
                    return false;
                }
            });
        });
        $form.on('keyup', '.error', function () {
            $(this).removeClass('error');
        });
    }
    $('.jsForm').each(initForm);
    $('.jsValid').each(validateBeforeSend);
    $(".jsPhoneMask").mask("+7(999) 999-99-99");
    $(".jsNumMask").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
        // Allow: Ctrl/cmd+A
        e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true) ||
        // Allow: Ctrl/cmd+C
        e.keyCode == 67 && (e.ctrlKey === true || e.metaKey === true) ||
        // Allow: Ctrl/cmd+X
        e.keyCode == 88 && (e.ctrlKey === true || e.metaKey === true) ||
        // Allow: home, end, left, right
        e.keyCode >= 35 && e.keyCode <= 39) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || e.keyCode < 48 || e.keyCode > 57) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });
})();
/* map */
(function () {
    var $map = $('#map');

    function initMap(data) {
        // Параметры карты можно задать в конструкторе.
        var map = new ymaps.Map(
        // ID DOM-элемента, в который будет добавлена карта.
        'map',
        // Параметры карты.
        {
            // Географические координаты центра отображаемой карты.
            center: data.map.center,
            // Масштаб.
            zoom: 10,
            controls: ['zoomControl', 'fullscreenControl']
        });
        map.behaviors.disable('scrollZoom');

        var collection = new ymaps.GeoObjectCollection();
        var points = data.points;
        for (var i = 0; i < points.length; i++) {
            collection.add(new ymaps.Placemark(points[i].position, {
                // hintContent: "<div class='map__hint'>"+points[i].content+"</div>",
                balloonContent: "<div class='map__balloon'>" + points[i].content + "</div>"
            }, {
                // Опции.
                // Необходимо указать данный тип макета.
                iconLayout: 'default#image',
                // Своё изображение иконки метки.
                iconImageHref: '../img/main/map_icon.png',
                // Размеры метки.
                iconImageSize: [61, 61],
                // Смещение левого верхнего угла иконки относительно
                // её "ножки" (точки привязки).
                iconImageOffset: [0, -61]
            }));
        }
        map.geoObjects.add(collection);
        map.setBounds(map.geoObjects.getBounds());
        // map.setZoom(map.getZoom()-1);
    }

    if ($map.length) {
        ymaps.ready(function () {
            $.ajax({
                url: $map.attr('data-url'),
                dataType: "json",
                error: function error(err) {
                    console.log(err);
                },
                success: initMap
            });
        });
    }
})();
/* popup */
var popupApp = function () {
    var $BASE;
    var $ITEMS;
    var $BODY;

    function close() {
        $BODY.removeClass('popupOpened');
        $BODY.css('padding-right', 0);
    }
    function open(id) {
        close();
        var $popup = $(id);
        if (!$popup.length) return;

        var width = $BODY.width();
        $ITEMS.hide();
        $popup.show();
        $BODY.addClass('popupOpened');
        $BODY.css('padding-right', $BODY.width() - width);
    }
    function setup() {
        $('.jsPopupOpen').on('click', function (e) {
            e.preventDefault();
            open($(this).attr('href'));
        });
        $BASE.on('click', '.jsPopupClose', function (e) {
            e.preventDefault();
            close();
        });
    }
    function alert(obj) {
        var $popupAlert = $('#popupMessage');
        $popupAlert.find('.popup__message').html(obj.text);
        $popupAlert.find('.popup__close').attr('href', '#' + obj.id);
        open('#popupMessage');
    }

    return {
        init: function init() {
            $BASE = $('.popup');
            $BODY = $('body');
            $ITEMS = $BASE.find('.popup__item');
            setup();
        },
        open: open,
        close: close,
        alert: alert
    };
}();
popupApp.init();
/* video */
(function () {
    var $base = $('#popupVideo');
    var $container = $base.find('.popup__video');
    var $close = $base.find('.popup__close');

    $('.jsPopupVideo').on('click', function (e) {
        e.preventDefault();
        var src = $(this).attr('data-src');
        $container.html('<iframe src="https://www.youtube.com/embed/' + src + '?autoplay=1&wmode=transparent" width="100%" height="100%" frameborder="0" allowfullscreen wmode="Opaque"></iframe>');
        popupApp.open('#popupVideo');
    });
    $close.on('click', function (e) {
        e.preventDefault();
        popupApp.close();
        $container.html('');
    });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
